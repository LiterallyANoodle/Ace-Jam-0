[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://7cfus8rmdesc"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kkbr1"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_a81mm"]
default_input_values = [2, false, 3, 3.0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_v3h18"]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yg4oo"]
input_name = "view"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_oqiw4"]
parameter_name = "BaseColor"
default_value_enabled = true
default_value = Color(0.099, 0.06, 0.24, 1)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_j7siv"]
parameter_name = "FresnelColor"
default_value_enabled = true
default_value = Color(0.0414, 0.23, 0.0759767, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_y7c3x"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_lbc6c"]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_n2anj"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 BaseColor : source_color = vec4(0.099000, 0.060000, 0.240000, 1.000000);
uniform vec4 FresnelColor : source_color = vec4(0.041400, 0.230000, 0.075977, 1.000000);



void fragment() {
// ColorParameter:5
	vec4 n_out5p0 = BaseColor;


// Input:3
	vec3 n_out3p0 = NORMAL;


// Input:4
	vec3 n_out4p0 = VIEW;


// Fresnel:2
	float n_in2p3 = 3.00000;
	float n_out2p0 = pow(1.0 - clamp(dot(n_out3p0, n_out4p0), 0.0, 1.0), n_in2p3);


// FloatFunc:8
	float n_out8p0 = 1.0 - n_out2p0;


// VectorOp:9
	vec4 n_out9p0 = n_out5p0 * vec4(n_out8p0);


// ColorParameter:6
	vec4 n_out6p0 = FresnelColor;


// VectorOp:7
	vec4 n_out7p0 = n_out6p0 * vec4(n_out2p0);


// VectorOp:10
	vec4 n_out10p0 = n_out9p0 + n_out7p0;


// Output:0
	ALBEDO = vec3(n_out10p0.xyz);
	SPECULAR = n_out2p0;


}
"
graph_offset = Vector2(-912.863, -219.163)
nodes/fragment/2/node = SubResource("VisualShaderNodeFresnel_a81mm")
nodes/fragment/2/position = Vector2(-620, 460)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_v3h18")
nodes/fragment/3/position = Vector2(-960, 440)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_yg4oo")
nodes/fragment/4/position = Vector2(-960, 520)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_oqiw4")
nodes/fragment/5/position = Vector2(-700, -80)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorParameter_j7siv")
nodes/fragment/6/position = Vector2(-700, 120)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_y7c3x")
nodes/fragment/7/position = Vector2(-120, 180)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatFunc_lbc6c")
nodes/fragment/8/position = Vector2(-340, 460)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorOp_n2anj")
nodes/fragment/9/position = Vector2(-120, -20)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_kkbr1")
nodes/fragment/10/position = Vector2(80, 60)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 0, 4, 0, 2, 1, 6, 0, 7, 0, 2, 0, 7, 1, 2, 0, 8, 0, 5, 0, 9, 0, 8, 0, 9, 1, 9, 0, 10, 0, 7, 0, 10, 1, 10, 0, 0, 0, 2, 0, 0, 4)
